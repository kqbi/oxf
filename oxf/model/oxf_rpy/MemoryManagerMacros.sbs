I-Logix-RPY-Archive version 8.13.0 C++ 9796850
{ ISubsystem 
	- _cmheader = "$Id: MemoryManagerMacros.sbs 1.20 2007/04/06 07:09:37 ilgiga Exp $
$Revision: 1.20 $
$Locker: $

";
	- _id = GUID cca02b2d-a2d9-4cb7-a97b-5bbf721322b6;
	- _myState = 8192;
	- _name = "MemoryManagerMacros";
	- Dependencies = { IRPYRawContainer 
		- size = 1;
		- value = 
		{ IDependency 
			- _id = GUID 7d5f7b37-88ac-49fd-b19f-474f185352fa;
			- _myState = 2048;
			- _properties = { IPropertyContainer 
				- Subjects = { IRPYRawContainer 
					- size = 1;
					- value = 
					{ IPropertySubject 
						- _Name = "CG";
						- Metaclasses = { IRPYRawContainer 
							- size = 1;
							- value = 
							{ IPropertyMetaclass 
								- _Name = "Dependency";
								- Properties = { IRPYRawContainer 
									- size = 1;
									- value = 
									{ IProperty 
										- _Name = "UsageType";
										- _Value = "Specification";
										- _Type = Enum;
										- _ExtraTypeInfo = "Specification,Implementation,Existence";
									}
								}
							}
						}
					}
				}
			}
			- _name = "BasicTypes";
			- Stereotypes = { IRPYRawContainer 
				- size = 1;
				- value = 
				{ IHandle 
					- _m2Class = "IStereotype";
					- _filename = "PredefinedTypes.sbs";
					- _subsystem = "PredefinedTypes";
					- _class = "";
					- _name = "Usage";
					- _id = GUID 42aa4325-6112-4e88-87ce-66008878f1db;
				}
			}
			- _modifiedTimeWeak = 1.26.2009::11:6:58;
			- _dependsOn = { INObjectHandle 
				- _m2Class = "ISubsystem";
				- _filename = "BasicTypes.sbs";
				- _subsystem = "Design::oxf::Services::Types";
				- _class = "";
				- _name = "BasicTypes";
				- _id = GUID 0d1d4186-d8c6-4c2c-8e3b-83732820041b;
			}
		}
	}
	- _modifiedTimeWeak = 1.2.2017::13:34:16;
	- _description = { IDescription 
		- _textRTF = "{\\rtf1\\fbidis\\ansi\\ansicpg1255\\deff0\\deflang1037{\\fonttbl{\\f0\\fnil\\fcharset0 Arial;}{\\f1\\fnil\\fcharset177{\\*\\fname Arial;}Arial (Hebrew);}}
\\viewkind4\\uc1\\pard\\ltrpar\\fs20 Memory manager related macros\\f1\\rtlch\\par
}
";
	}
	- _lastID = 2;
	- weakCGTime = 1.2.2017::13:34:16;
	- strongCGTime = 1.15.2009::14:32:20;
	- _defaultComposite = GUID 6c6eae53-7371-4f20-9c08-64658f156188;
	- _eventsBaseID = -1;
	- Classes = { IRPYRawContainer 
		- size = 1;
		- value = 
		{ IClass 
			- _id = GUID 6c6eae53-7371-4f20-9c08-64658f156188;
			- _myState = 40960;
			- _name = "TopLevel";
			- _modifiedTimeWeak = 8.17.2013::18:9:55;
			- weakCGTime = 8.17.2013::18:9:55;
			- strongCGTime = 1.15.2009::14:32:20;
			- _multiplicity = "";
			- _itsStateChart = { IHandle 
				- _m2Class = "";
			}
			- _classModifier = Unspecified;
		}
	}
	- Types = { IRPYRawContainer 
		- size = 12;
		- value = 
		{ IType 
			- _id = GUID 2400e6a9-92f3-424d-8020-974e24aec7a1;
			- _myState = 8192;
			- _name = "REPLACEMENT_NEW";
			- _modifiedTimeWeak = 1.2.1990::0:0:0;
			- _description = { IDescription 
				- _textRTF = "{\\rtf1\\fbidis\\ansi\\ansicpg1255\\deff0\\deflang1037{\\fonttbl{\\f0\\fnil\\fcharset0 MS Sans Serif;}{\\f1\\fnil\\fcharset177 MS Sans Serif;}}
\\viewkind4\\uc1\\pard\\ltrpar\\f0\\fs17 Support OS without global placement new/delete operators\\f1\\rtlch\\par
}
";
			}
			- _declaration = "#if (!defined(OM_NO_FRAMEWORK_MEMORY_MANAGER) && !defined(OMOMATE))
#ifdef OM_NO_OS_REPLACEMENT_NEW
inline void * operator new(size_t, void * ptr) { return ptr; }
inline void operator delete(void *, void *) {return; }
#else
#ifdef OM_STL
#include <new>
#else
#ifdef OM_USE_THE_NEW_HEADER
#include <new>
#else
#include <new.h>
#endif // OM_USE_THE_NEW_HEADER
#endif // OM_STL
#endif // OM_NO_OS_REPLACEMENT_NEW
#endif // (!defined(OM_NO_FRAMEWORK_MEMORY_MANAGER) && !defined(OMOMATE))";
			- _kind = Language;
		}
		{ IType 
			- _id = GUID 62a46707-7fdd-428d-b4b9-62d0f3308731;
			- _myState = 8192;
			- _name = "OS_ASSERT";
			- _modifiedTimeWeak = 1.2.1990::0:0:0;
			- _description = { IDescription 
				- _textRTF = "{\\rtf1\\fbidis\\ansi\\ansicpg1255\\deff0\\deflang1037{\\fonttbl{\\f0\\fnil\\fcharset0 MS Sans Serif;}{\\f1\\fnil\\fcharset177 MS Sans Serif;}}
\\viewkind4\\uc1\\pard\\ltrpar\\f0\\fs17 Support OS without support in ANSI assert()\\f1\\rtlch\\par
}
";
			}
			- _declaration = "#if (!defined(OM_NO_FRAMEWORK_MEMORY_MANAGER) && !defined(OMOMATE))
#ifdef OM_DISABLE_ASSERT
// Support disabling of assert().
// Done to avoid LINT warnings due to Microsoft implementation.
#ifdef assert
#undef assert
#endif // assert
#define assert(condition)
#else // !OM_DISABLE_ASSERT
#ifdef OM_NO_OS_ASSERT
#ifndef assert
#define assert(condition) if (!(condition)) { exit(-1); }
#endif // assert
#else
#include <assert.h>
#endif // OM_NO_OS_ASSERT
#endif // OM_DISABLE_ASSERT
#endif // (!defined(OM_NO_FRAMEWORK_MEMORY_MANAGER) && !defined(OMOMATE))";
			- _kind = Language;
		}
		{ IType 
			- _id = GUID 5f2b65cc-a353-4f8f-9564-b7ee92ef4056;
			- _myState = 8192;
			- _name = "NEW_DUMMY_PARAM";
			- _modifiedTimeWeak = 1.2.1990::0:0:0;
			- _description = { IDescription 
				- _textRTF = "{\\rtf1\\fbidis\\ansi\\ansicpg1255\\deff0\\deflang1037{\\fonttbl{\\f0\\fnil\\fcharset0 MS Sans Serif;}{\\f1\\fnil\\fcharset177 MS Sans Serif;}}
\\viewkind4\\uc1\\pard\\ltrpar\\f0\\fs17 Add dummy size parameter to the new operator - compiler dependent code\\f1\\rtlch\\par
}
";
			}
			- _declaration = "#ifdef OM_NEW_OPERATOR_NEEDS_DUMMY_PARAM
#define %s ,size_t = 0
#else
#define %s
#endif // OM_NEW_OPERATOR_NEEDS_DUMMY_PARAM";
			- _kind = Language;
		}
		{ IType 
			- _id = GUID ed249526-441b-4bd7-86d9-2fea8f858aab;
			- _myState = 8192;
			- _name = "NEW_DUMMY_PARAM_IMP";
			- _modifiedTimeWeak = 7.16.2013::9:42:12;
			- _description = { IDescription 
				- _textRTF = "{\\rtf1\\fbidis\\ansi\\ansicpg1255\\deff0\\deflang1037{\\fonttbl{\\f0\\fnil\\fcharset0 Arial;}{\\f1\\fnil\\fcharset177{\\*\\fname Arial;}Arial (Hebrew);}}
\\viewkind4\\uc1\\pard\\ltrpar\\fs20 The framework memory pool dummy new parameter (required by some compilers)\\f1\\rtlch\\par
}
";
			}
			- _declaration = "#ifdef OM_NEW_OPERATOR_NEEDS_DUMMY_PARAM
#define %s ,size_t
#else // !OM_NEW_OPERATOR_NEEDS_DUMMY_PARAM
#define %s
#endif // OM_NEW_OPERATOR_NEEDS_DUMMY_PARAM";
			- _kind = Language;
		}
		{ IType 
			- _id = GUID 11f3101c-b9c5-4fa9-b118-808826f863d5;
			- _myState = 8192;
			- _name = "DELETE_DUMMY_PARAM_IMP";
			- _modifiedTimeWeak = 7.16.2013::9:43:4;
			- _description = { IDescription 
				- _textRTF = "{\\rtf1\\fbidis\\ansi\\ansicpg1255\\deff0\\deflang1037{\\fonttbl{\\f0\\fnil\\fcharset0 Arial;}{\\f1\\fnil\\fcharset177{\\*\\fname Arial;}Arial (Hebrew);}}
\\viewkind4\\uc1\\pard\\ltrpar\\fs20 The framework memory pool dummy delete parameter (required by some compilers)\\f1\\rtlch\\par
}
";
			}
			- _declaration = "#ifdef OM_NEW_OPERATOR_NEEDS_DUMMY_PARAM
#define SIZE_PARAM_NAME omSizeOfDeletedObject
#define %s ,size_t SIZE_PARAM_NAME
#else // !OM_NEW_OPERATOR_NEEDS_DUMMY_PARAM
#define %s
#define SIZE_PARAM_NAME 0
#endif // OM_NEW_OPERATOR_NEEDS_DUMMY_PARAM";
			- _kind = Language;
		}
		{ IType 
			- _id = GUID fc270867-fd27-44ef-8d0b-587724eaa580;
			- _myState = 8192;
			- _name = "OMNEW";
			- _modifiedTimeWeak = 1.2.1990::0:0:0;
			- _description = { IDescription 
				- _textRTF = "{\\rtf1\\fbidis\\ansi\\ansicpg1255\\deff0\\deflang1037{\\fonttbl{\\f0\\fnil\\fcharset0 Arial;}{\\f1\\fnil\\fcharset177{\\*\\fname Arial;}Arial (Hebrew);}}
\\viewkind4\\uc1\\pard\\ltrpar\\fs20 Request memory for a given number of instances of the given type\\f1\\rtlch\\par
}
";
			}
			- _declaration = "#if (!defined(OM_NO_FRAMEWORK_MEMORY_MANAGER) && !defined(OMOMATE))
#define %s(aType, aSize) ( new(OMMemoryManager::getMemoryManager()->getMemory( sizeof(aType) * (static_cast<size_t>(aSize))) ) aType[static_cast<size_t>(aSize)] )
#else
// use the global new operator
#define %s(aType, aSize) ( new aType[static_cast<size_t>(aSize)] )
#endif // (!defined(OM_NO_FRAMEWORK_MEMORY_MANAGER) && !defined(OMOMATE))";
			- _kind = Language;
		}
		{ IType 
			- _id = GUID 6499f1ad-4acd-4545-acfd-4642e48d3d47;
			- _myState = 8192;
			- _name = "OMDELETE";
			- _modifiedTimeWeak = 1.2.2017::13:34:16;
			- _description = { IDescription 
				- _textRTF = "{\\rtf1\\fbidis\\ansi\\ansicpg1255\\deff0\\deflang1037{\\fonttbl{\\f0\\fnil\\fcharset0 Arial;}}
{\\colortbl ;\\red0\\green0\\blue255;}
\\viewkind4\\uc1\\pard\\ltrpar\\fs17 Return memory allocated by \\cf1\\ul\\protect OMNEW\\cf0\\ulnone\\protect0\\par
}
";
				- Hyperlinks = { IRPYRawContainer 
					- size = 1;
					- value = 
					{ IInternalHyperlink 
						- _name = "OMNEW";
						- _textType = "NAME";
						- _target = { IHandle 
							- _m2Class = "IType";
							- _id = GUID fc270867-fd27-44ef-8d0b-587724eaa580;
						}
					}
				}
			}
			- _declaration = "#if (!defined(OM_NO_FRAMEWORK_MEMORY_MANAGER) && !defined(OMOMATE))

#define %s(object, size) (OMMemoryManager::getMemoryManager()->	\\
/*LDRA_INSPECTED 554 S : cast is ok */                          \\
	returnMemory( reinterpret_cast<void*>(object), size))
#else
// the dummy variable is used to avoid compilation warnings,
// it is required for the other definition of the OMDELETE() macro
// - when the memory manager is used.
#define %s(object, dummy)			\\
	if ((dummy) == 0) {} 			\\
	delete[] (object)

#endif // (!defined(OM_NO_FRAMEWORK_MEMORY_MANAGER) && !defined(OMOMATE))";
			- _kind = Language;
		}
		{ IType 
			- _id = GUID aceeadc8-c40e-4547-8af6-25254a2b6fd4;
			- _myState = 8192;
			- _name = "OMGET_MEMORY";
			- _modifiedTimeWeak = 1.2.1990::0:0:0;
			- _description = { IDescription 
				- _textRTF = "{\\rtf1\\fbidis\\ansi\\ansicpg1255\\deff0\\deflang1037{\\fonttbl{\\f0\\fnil\\fcharset0 Arial;}{\\f1\\fnil\\fcharset177{\\*\\fname Arial;}Arial (Hebrew);}}
\\viewkind4\\uc1\\pard\\ltrpar\\fs20 Request memory for a given number of bytes\\f1\\rtlch\\par
}
";
			}
			- _declaration = "#if (!defined(OM_NO_FRAMEWORK_MEMORY_MANAGER) && !defined(OMOMATE))
#define %s(aSize) OMMemoryManager::getMemoryManager()->getMemory((size_t)(aSize))
#else
// use 'regular' new & delete for memory allocation
#define %s(aSize) ::operator new((size_t) (aSize))
#endif // (!defined(OM_NO_FRAMEWORK_MEMORY_MANAGER) && !defined(OMOMATE))";
			- _kind = Language;
		}
		{ IType 
			- _id = GUID 3256744e-7e7b-43ab-aa1d-5509630c9cc9;
			- _myState = 8192;
			- _name = "OM_DECLARE_REPLACEMENT_DELETE_OPERATOR";
			- _modifiedTimeWeak = 1.2.1990::0:0:0;
			- _description = { IDescription 
				- _textRTF = "{\\rtf1\\fbidis\\ansi\\ansicpg1255\\deff0\\deflang1037{\\fonttbl{\\f0\\fnil\\fcharset0 Arial;}{\\f1\\fnil\\fcharset177{\\*\\fname Arial;}Arial (Hebrew);}}
\\viewkind4\\uc1\\pard\\ltrpar\\fs20 Replacement delete operator declaration\\f1\\rtlch\\par
}
";
			}
			- _declaration = "#ifndef OM_NO_COMPILER_SUPPORT_FOR_REPLACEMENT_DELETE
#define %s	\\
	static void operator delete (void*, void*)	\\
	{											\\
		return;									\\
	}

#else
#define %s
#endif // OM_NO_COMPILER_SUPPORT_FOR_REPLACEMENT_DELETE";
			- _kind = Language;
		}
		{ IType 
			- _id = GUID d8041a7d-f042-4894-85c2-8bad56d330ef;
			- _myState = 8192;
			- _name = "OM_DECLARE_NOTHROW_INLINE_ALLOCATION_OPERATORS";
			- _modifiedTimeWeak = 8.17.2013::18:6:8;
			- _description = { IDescription 
				- _text = "nothrow new and delete operators";
			}
			- _declaration = "#ifdef OM_NO_NOTHROW_NEW_SUPPORT
#define %s
#else
#define %s \\
	static void* operator new (size_t aSize, const struct std::nothrow_t&) throw() \\
	{																		\\
	return OMMemoryManager::getMemoryManager()->getMemory(aSize);			\\
	}																		\\
	static void* operator new[] (size_t aSize, const struct std::nothrow_t&) throw() \\
	{																		\\
		return OMMemoryManager::getMemoryManager()->getMemory(aSize);		\\
	}																		\\
	static void operator delete(void * const aObject, const struct std::nothrow_t&) throw() \\
	{																		\\
		if (aObject != NULL) {												\\
			OMMemoryManager::getMemoryManager()->returnMemory(aObject,0);	\\
		}																	\\
	}																		\\
	static void operator delete[] (void * const aObject, const struct std::nothrow_t&) throw() \\
	{																		\\
		if (aObject != NULL) {												\\
			OMMemoryManager::getMemoryManager()->returnMemory(aObject,0);	\\
		}																	\\
	}
#endif
";
			- _kind = Language;
		}
		{ IType 
			- _id = GUID 30c59138-4b99-4885-a083-86f318412bcb;
			- _myState = 8192;
			- _name = "OM_DECLARE_FRAMEWORK_MEMORY_ALLOCATION_OPERATORS";
			- _modifiedTimeWeak = 8.17.2013::18:9:55;
			- _description = { IDescription 
				- _textRTF = "{\\rtf1\\fbidis\\ansi\\ansicpg1255\\deff0\\deflang1037{\\fonttbl{\\f0\\fnil\\fcharset0 Arial;}{\\f1\\fnil\\fcharset177{\\*\\fname Arial;}Arial (Hebrew);}}
\\viewkind4\\uc1\\pard\\ltrpar\\fs17 Override on the new and delete operators to obtain memory from the framework memory manager\\f1\\rtlch\\par
}
";
			}
			- _declaration = "#if (!defined(OM_NO_FRAMEWORK_MEMORY_MANAGER) && !defined(OMOMATE))
#define %s					\\
public:																		\\
	static void* operator new (size_t aSize NEW_DUMMY_PARAM)				\\
	{																		\\
		return OMMemoryManager::getMemoryManager()->getMemory(aSize);		\\
	}																		\\
	static void* operator new[] (size_t aSize NEW_DUMMY_PARAM)				\\
	{																		\\
		return OMMemoryManager::getMemoryManager()->getMemory(aSize);		\\
	}																		\\
	static void * operator new(size_t, void * ptr)							\\
	{																		\\
		return ptr;															\\
	}																		\\
	static void operator delete (void * aObject DELETE_DUMMY_PARAM_IMP)		\\
	{																		\\
		if (aObject != NULL) {												\\
			OMMemoryManager::getMemoryManager()->returnMemory(aObject,SIZE_PARAM_NAME);	\\
		}																	\\
	}																		\\
	static void operator delete[] (void * aObject DELETE_DUMMY_PARAM_IMP)	\\
	{																		\\
		if (aObject != NULL) {												\\
			OMMemoryManager::getMemoryManager()->returnMemory(aObject,SIZE_PARAM_NAME);	\\
		}																	\\
	}																		\\
    OM_DECLARE_NOTHROW_INLINE_ALLOCATION_OPERATORS \\
	OM_DECLARE_REPLACEMENT_DELETE_OPERATOR

#else
// empty
#define %s
#endif // (!defined(OM_NO_FRAMEWORK_MEMORY_MANAGER) && !defined(OMOMATE))";
			- _kind = Language;
		}
		{ IType 
			- _id = GUID de69b294-5215-4f64-827f-a1851fd5f868;
			- _myState = 8192;
			- _name = "OM_MEMORY_MANAGER_SWITCH_HELPER_POOL_SIZE";
			- _modifiedTimeWeak = 1.2.1990::0:0:0;
			- _description = { IDescription 
				- _textRTF = "{\\rtf1\\fbidis\\ansi\\ansicpg1255\\deff0\\deflang1037{\\fonttbl{\\f0\\fnil\\fcharset0 Arial;}{\\f1\\fnil\\fcharset177{\\*\\fname Arial;}Arial (Hebrew);}}
\\viewkind4\\uc1\\pard\\ltrpar\\fs17 The pool size for the memory manager switch helper allocated memory list\\f1\\rtlch\\par
}
";
			}
			- _declaration = "#if (!defined(OM_NO_FRAMEWORK_MEMORY_MANAGER) && !defined(OMOMATE))
#ifndef %s
#define %s 512
#endif // ifndef %s
#endif // (!defined(OM_NO_FRAMEWORK_MEMORY_MANAGER) && !defined(OMOMATE))";
			- _kind = Language;
		}
	}
	- _configurationRelatedTime = 1.2.1990::0:0:0;
}

